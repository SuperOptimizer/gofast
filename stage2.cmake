# This file sets up a CMakeCache for the second stage of a simple distribution
# bootstrap build.

set(LLVM_ENABLE_PROJECTS "clang;clang-tools-extra;lld" )
set(LLVM_ENABLE_RUNTIMES "compiler-rt;libcxx;libcxxabi;libunwind;scudo_standalone" )

set(CMAKE_C_COMPILER_WORKS ON)
set(CMAKE_CXX_COMPILER_WORKS ON)

# Setup vendor-specific settings.
set(PACKAGE_VENDOR xxx )

set(CMAKE_C_COMPILER clang )
set(CMAKE_CXX_COMPILER clang++ )
set(CMAKE_ASM_COMPILER clang )
set(CMAKE_AR llvm-ar )
set(CMAKE_RANLIB llvm-ranlib )
set(CMAKE_LINKER lld )

set(CMAKE_VISIBILITY_INLINES_HIDDEN ON)
set(CMAKE_C_VISIBILITY_PRESET hidden )
set(CMAKE_CXX_VISIBILITY_PRESET hidden )
set(CMAKE_PLATFORM_NO_VERSIONED_SONAME ON)

set(BUILD_SHARED_LIBS OFF)
set(LLVM_TARGETS_TO_BUILD Native)
set(LLVM_ENABLE_LTO OFF)
set(LLVM_FORCE_BUILD_RUNTIME ON)
set(LLVM_STATIC_LINK_CXX_STDLIB ON)
set(LLVM_USE_RELATIVE_PATHS_IN_FILES ON)

set(LLVM_INCLUDE_DOCS OFF)
set(LLVM_INCLUDE_TESTS OFF)
set(LLVM_INCLUDE_EXAMPLES OFF)
set(LLVM_INCLUDE_BENCHMARKS OFF)

set(LLVM_LIBC_INCLUDE_SCUDO ON)
set(COMPILER_RT_BUILD_SCUDO_STANDALONE_WITH_LLVM_LIBC ON)
set(LLVM_LIBC_FULL_BUILD ON)
set(LIBC_ENABLE_USE_BY_CLANG ON)
set(COMPILER_RT_BUILD_GWP_ASAN OFF)
set(COMPILER_RT_SCUDO_STANDALONE_BUILD_SHARED OFF)

set(CMAKE_BUILD_TYPE MinSizeRel )
set(CMAKE_C_FLAGS " -static -DNDEBUG" )
set(CMAKE_CXX_FLAGS " -static -DNDEBUG" )
set(CMAKE_EXE_LINKER_FLAGS "-static" )

set(CLANG_DEFAULT_CXX_STDLIB libc++ )
set(CLANG_DEFAULT_LINKER lld )
set(CLANG_DEFAULT_OBJCOPY llvm-objcopy )
set(CLANG_DEFAULT_RTLIB compiler-rt )
set(CLANG_DEFAULT_UNWINDLIB libunwind )
set(CLANG_ENABLE_STATIC_ANALYZER ON)

set(LIBUNWIND_ENABLE_SHARED OFF)
set(LIBUNWIND_INSTALL_LIBRARY ON)
set(LIBUNWIND_USE_COMPILER_RT ON)

set(LIBCXXABI_ENABLE_SHARED OFF)
set(LIBCXXABI_ENABLE_STATIC_UNWINDER ON)
set(LIBCXXABI_HERMETIC_STATIC_LIBRARY ON)
set(COMPILER_RT_CXX_LIBRARY "libcxx" )

set(CMAKE_INSTALL_LIBDIR lib )

set(COMPILER_RT_USE_LLVM_UNWINDER ON)
set(COMPILER_RT_BUILD_BUILTINS ON)
set(COMPILER_RT_BUILD_CRT ON)
set(COMPILER_RT_BUILD_STANDALONE_LIBATOMIC OFF)
set(COMPILER_RT_HAS_FNO_BUILTIN_FLAG ON)
set(COMPILER_RT_BUILTINS_HIDE_SYMBOLS ON)
set(COMPILER_RT_HAS_VISIBILITY_HIDDEN_FLAG ON)
set(COMPILER_RT_BUILD_MEMPROF OFF)
set(COMPILER_RT_BUILD_PROFILE OFF)
set(COMPILER_RT_BUILD_SANITIZERS OFF)
set(COMPILER_RT_BUILD_XRAY OFF)
set(COMPILER_RT_BUILD_ORC OFF)
set(COMPILER_RT_BUILD_LIBFUZZER OFF)
set(COMPILER_RT_DEBUG OFF)
set(COMPILER_RT_CRT_USE_EH_FRAME_REGISTRY ON)

set(LLVM_ENABLE_LIBCXX ON)

set(LIBCXXABI_USE_COMPILER_RT ON)
set(LIBCXXABI_USE_LLVM_UNWINDER ON)
set(LIBCXX_ABI_VERSION 2 )
set(LIBCXX_ENABLE_SHARED OFF)
set(LIBCXX_ENABLE_STATIC_ABI_LIBRARY ON)
set(LIBCXX_HARDENING_MODE "fast" )
set(LIBCXX_USE_COMPILER_RT ON)
set(LIBCXX_INCLUDE_BENCHMARKS OFF)

set(LIBCXX_ENABLE_STATIC ON)
set(LIBCXX_INSTALL_LIBRARY ON)
set(LIBCXX_CXX_ABI none )

set(LIBCXX_ENABLE_LOCALIZATION OFF)
set(LIBCXX_ENABLE_WIDE_CHARACTERS OFF)
set(LIBCXX_ENABLE_FILESYSTEM OFF)
set(LIBCXX_ENABLE_RANDOM_DEVICE OFF)
set(LIBCXX_ENABLE_MONOTONIC_CLOCK OFF)
set(LIBCXX_ENABLE_THREADS OFF)

set(LIBCXX_ENABLE_UNICODE OFF)
set(LIBCXX_ENABLE_EXCEPTIONS OFF)
set(LIBCXX_ENABLE_RTTI OFF)

set(LIBCXX_ENABLE_EXCEPTIONS OFF)
set(LIBCXXABI_ENABLE_EXCEPTIONS OFF)
set(LIBUNWIND_ENABLE_EXCEPTIONS OFF)

set(COMPILER_RT_BUILD_SANITIZERS OFF)
set(COMPILER_RT_BUILD_XRAY OFF)
set(COMPILER_RT_BUILD_LIBFUZZER OFF)
set(COMPILER_RT_BUILD_PROFILE OFF)
set(LIBUNWIND_FORCE_UNWIND_TABLES OFF)

set(LLVM_OPTIMIZED_TABLEGEN ON)
set(LLVM_PARALLEL_LINK_JOBS 8)
set(LLVM_PARALLEL_COMPILE_JOBS 32)
set(CMAKE_INTERPROCEDURAL_OPTIMIZATION ON)

set(LIBCXX_HAS_GCC_S_LIB OFF)
set(LIBCXXABI_HAS_GCC_S_LIB OFF)
set(LIBUNWIND_HAS_GCC_S_LIB OFF)
set(LIBCXX_HAS_ATOMIC_LIB OFF)
set(LIBCXXABI_HAS_CXA_THREAD_ATEXIT_IMPL OFF)

# Complete Static Linking
set(LLVM_ENABLE_PIC OFF)
set(COMPILER_RT_ENABLE_PIC OFF)
set(LIBCXX_ENABLE_PIC OFF)
set(LIBCXXABI_ENABLE_PIC OFF)
set(LIBUNWIND_ENABLE_PIC OFF)

# Minimal Runtime Features
set(LIBCXX_ENABLE_LOCALIZATION OFF)
set(LIBCXX_ENABLE_WIDE_CHARACTERS OFF)
set(LIBCXX_ENABLE_FILESYSTEM OFF)
set(LIBCXX_ENABLE_RANDOM_DEVICE OFF)
set(LIBCXX_ENABLE_MONOTONIC_CLOCK OFF)
set(LIBCXX_ENABLE_THREADS OFF)

# Remove External Dependencies
set(LLVM_ENABLE_ZLIB OFF)
set(LLVM_ENABLE_LIBXML2 OFF)
set(LLVM_ENABLE_TERMINFO OFF)
set(LLVM_ENABLE_LIBEDIT OFF)
set(LLVM_ENABLE_FFI OFF)

# libcxx options
set(LIBCXX_ENABLE_SHARED OFF)
set(LIBCXX_ENABLE_STATIC ON)
set(LIBCXX_USE_COMPILER_RT ON)
set(LIBCXX_ENABLE_EXCEPTIONS OFF)

# libcxxabi options
set(LIBCXXABI_ENABLE_SHARED OFF)
set(LIBCXXABI_ENABLE_STATIC ON)
set(LIBCXXABI_USE_COMPILER_RT ON)
set(LIBCXXABI_ENABLE_EXCEPTIONS OFF)

# libunwind options
set(LIBUNWIND_ENABLE_SHARED OFF)
set(LIBUNWIND_ENABLE_STATIC ON)
set(LIBUNWIND_USE_COMPILER_RT ON)
set(LIBUNWIND_ENABLE_EXCEPTIONS OFF)

# compiler-rt options
set(COMPILER_RT_ENABLE_SHARED OFF)
set(COMPILER_RT_ENABLE_STATIC ON)
set(COMPILER_RT_USE_COMPILER_RT ON)
set(COMPILER_RT_ENABLE_EXCEPTIONS OFF)

# libc options
set(LIBC_ENABLE_SHARED OFF)
set(LIBC_ENABLE_STATIC ON)
set(LIBC_USE_COMPILER_RT ON)
set(LIBC_ENABLE_EXCEPTIONS OFF)

# Additional components if included
set(OPENMP_ENABLE_SHARED OFF)
set(OPENMP_ENABLE_STATIC ON)
set(OPENMP_USE_COMPILER_RT ON)
set(OPENMP_ENABLE_EXCEPTIONS OFF)

set(SCUDO_ENABLE_SHARED OFF)
set(SCUDO_ENABLE_STATIC ON)
set(SCUDO_USE_COMPILER_RT ON)
set(SCUDO_ENABLE_EXCEPTIONS OFF)

# Main LLVM target triples
set(LLVM_DEFAULT_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LLVM_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LLVM_HOST_TRIPLE "${TARGET_TRIPLE}")
set(CMAKE_HOST_TRIPLE "${TARGET_TRIPLE}")

# Runtime libraries target triples
set(LIBCXX_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LIBCXXABI_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LIBUNWIND_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(COMPILER_RT_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LIBC_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(OPENMP_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(SCUDO_TARGET_TRIPLE "${TARGET_TRIPLE}")

# Clang and related tools
set(CLANG_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LLD_TARGET_TRIPLE "${TARGET_TRIPLE}")
set(LLDB_TARGET_TRIPLE "${TARGET_TRIPLE}")


set(LLVM_BUILD_TOOLS ON)
set(LLVM_INSTALL_TOOLCHAIN_ONLY ON)
set(LLVM_TOOLCHAIN_TOOLS
  dsymutil
  llvm-ar
  llvm-cov
  llvm-cxxfilt
  llvm-debuginfod
  llvm-debuginfod-find
  llvm-dlltool
  llvm-dwarfdump
  llvm-dwp
  llvm-ifs
  llvm-gsymutil
  llvm-lib
  llvm-libtool-darwin
  llvm-lipo
  llvm-ml
  llvm-mt
  llvm-nm
  llvm-objcopy
  llvm-objdump
  llvm-otool
  llvm-pdbutil
  llvm-profdata
  llvm-rc
  llvm-ranlib
  llvm-readelf
  llvm-readobj
  llvm-size
  llvm-strings
  llvm-strip
  llvm-symbolizer
  llvm-undname
  llvm-xray
  opt-viewer
  sancov
  scan-build-py
  )


set(LLVM_DISTRIBUTION_COMPONENTS
  clang
  LTO
  lld
  libc
  clang-apply-replacements
  clang-format
  clang-resource-headers
  clang-include-fixer
  clang-refactor
  clang-scan-deps
  find-all-symbols
  builtins
  runtimes
  ${LLVM_TOOLCHAIN_TOOLS}
  )